library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity random_number_generator is
	port(clk:in std_logic;
		  random_number:out std_logic_vector(9 downto 0)
	);
end entity random_number_generator;

architecture behaviour of random_number_generator is
	signal q0: std_logic := '1';
	signal q1: std_logic := '1';
	signal q2: std_logic := '1';
	signal q3: std_logic := '1';
	signal q4: std_logic := '1';
	signal q5: std_logic := '1';
	signal q6: std_logic := '1';
	signal q7: std_logic := '1';
	signal q8: std_logic := '1';
	signal q9: std_logic := '1';
	begin
		process (clk)
			begin
				if(rising_edge(clk)) then
					q1 <= q0;
					q2 <= q1;
					q3 <= q2 xor q9;
					q4 <= q3;
					q5 <= q4;
					q6 <= q5;
					q7 <= q6;
					q8 <= q7;
					q9 <= q8;
					q0 <= q9;
				end if;
		random_number <= q0 & q1 & q2 & q3 & q4 & q5 & q6 & q7 & q8 & q9;
end behaviour;